'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport {\n  Brain,\n  Image,\n  Code,\n  FileText,\n  TrendingUp,\n  Users,\n  Zap,\n  Clock,\n  BarChart3,\n  Activity\n} from 'lucide-react'\nimport Link from 'next/link'\n\ninterface DashboardStats {\n  totalGenerations: number\n  tokensUsed: number\n  creditsRemaining: number\n  documentsProcessed: number\n}\n\ninterface RecentActivity {\n  id: string\n  type: 'text' | 'image' | 'code' | 'document'\n  title: string\n  timestamp: string\n  status: 'completed' | 'processing' | 'failed'\n}\n\nconst quickActions = [\n  {\n    icon: Brain,\n    title: 'Generate Text',\n    description: 'Create content with AI',\n    href: '/text-generation',\n    color: 'from-blue-500 to-cyan-500'\n  },\n  {\n    icon: Image,\n    title: 'Create Images',\n    description: 'Generate stunning visuals',\n    href: '/image-generation',\n    color: 'from-purple-500 to-pink-500'\n  },\n  {\n    icon: Code,\n    title: 'Analyze Code',\n    description: 'Review and optimize code',\n    href: '/code-analysis',\n    color: 'from-green-500 to-emerald-500'\n  },\n  {\n    icon: FileText,\n    title: 'Process Documents',\n    description: 'Extract and analyze content',\n    href: '/document-processing',\n    color: 'from-orange-500 to-red-500'\n  }\n]\n\nexport default function DashboardPage() {\n  const [stats, setStats] = useState<DashboardStats>({\n    totalGenerations: 0,\n    tokensUsed: 0,\n    creditsRemaining: 100,\n    documentsProcessed: 0\n  })\n  \n  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Simulate API calls\n    const fetchDashboardData = async () => {\n      try {\n        // Mock data - replace with actual API calls\n        setStats({\n          totalGenerations: 156,\n          tokensUsed: 45230,\n          creditsRemaining: 75,\n          documentsProcessed: 23\n        })\n        \n        setRecentActivity([\n          {\n            id: '1',\n            type: 'text',\n            title: 'Blog post about AI trends',\n            timestamp: '2 minutes ago',\n            status: 'completed'\n          },\n          {\n            id: '2',\n            type: 'image',\n            title: 'Product mockup design',\n            timestamp: '15 minutes ago',\n            status: 'completed'\n          },\n          {\n            id: '3',\n            type: 'code',\n            title: 'React component analysis',\n            timestamp: '1 hour ago',\n            status: 'completed'\n          },\n          {\n            id: '4',\n            type: 'document',\n            title: 'PDF contract processing',\n            timestamp: '2 hours ago',\n            status: 'processing'\n          }\n        ])\n      } catch (error) {\n        console.error('Failed to fetch dashboard data:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchDashboardData()\n  }, [])\n\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'text': return Brain\n      case 'image': return Image\n      case 'code': return Code\n      case 'document': return FileText\n      default: return Activity\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'text-green-500'\n      case 'processing': return 'text-yellow-500'\n      case 'failed': return 'text-red-500'\n      default: return 'text-gray-500'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-500\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"mb-8\"\n        >\n          <h1 className=\"text-4xl font-bold text-white mb-2\">Dashboard</h1>\n          <p className=\"text-gray-300\">Welcome back! Here's your AI productivity overview.</p>\n        </motion.div>\n\n        {/* Stats Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.1 }}\n            className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6\"\n          >\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-blue-500 to-cyan-500 flex items-center justify-center\">\n                <TrendingUp className=\"w-6 h-6 text-white\" />\n              </div>\n              <span className=\"text-green-400 text-sm font-medium\">+12%</span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-white mb-1\">{stats.totalGenerations}</h3>\n            <p className=\"text-gray-400 text-sm\">Total Generations</p>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6\"\n          >\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center\">\n                <Zap className=\"w-6 h-6 text-white\" />\n              </div>\n              <span className=\"text-blue-400 text-sm font-medium\">{stats.tokensUsed.toLocaleString()}</span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-white mb-1\">{stats.creditsRemaining}</h3>\n            <p className=\"text-gray-400 text-sm\">Credits Remaining</p>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n            className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6\"\n          >\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-green-500 to-emerald-500 flex items-center justify-center\">\n                <FileText className=\"w-6 h-6 text-white\" />\n              </div>\n              <span className=\"text-green-400 text-sm font-medium\">+5</span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-white mb-1\">{stats.documentsProcessed}</h3>\n            <p className=\"text-gray-400 text-sm\">Documents Processed</p>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n            className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6\"\n          >\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 rounded-xl bg-gradient-to-r from-orange-500 to-red-500 flex items-center justify-center\">\n                <BarChart3 className=\"w-6 h-6 text-white\" />\n              </div>\n              <span className=\"text-purple-400 text-sm font-medium\">99.9%</span>\n            </div>\n            <h3 className=\"text-2xl font-bold text-white mb-1\">Active</h3>\n            <p className=\"text-gray-400 text-sm\">System Status</p>\n          </motion.div>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Quick Actions */}\n          <div className=\"lg:col-span-2\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.5 }}\n              className=\"mb-6\"\n            >\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Quick Actions</h2>\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                {quickActions.map((action, index) => (\n                  <Link key={action.title} href={action.href}>\n                    <motion.div\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.6, delay: 0.6 + index * 0.1 }}\n                      whileHover={{ scale: 1.02 }}\n                      className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-all duration-300 cursor-pointer group\"\n                    >\n                      <div className={`w-12 h-12 rounded-xl bg-gradient-to-r ${action.color} flex items-center justify-center mb-4 group-hover:scale-110 transition-transform`}>\n                        <action.icon className=\"w-6 h-6 text-white\" />\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-white mb-2\">{action.title}</h3>\n                      <p className=\"text-gray-400 text-sm\">{action.description}</p>\n                    </motion.div>\n                  </Link>\n                ))}\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Recent Activity */}\n          <div>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.7 }}\n            >\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Recent Activity</h2>\n              <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6\">\n                <div className=\"space-y-4\">\n                  {recentActivity.map((activity, index) => {\n                    const IconComponent = getActivityIcon(activity.type)\n                    return (\n                      <motion.div\n                        key={activity.id}\n                        initial={{ opacity: 0, x: 20 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ duration: 0.4, delay: 0.8 + index * 0.1 }}\n                        className=\"flex items-center gap-3 p-3 rounded-lg hover:bg-white/5 transition-colors\"\n                      >\n                        <div className=\"w-8 h-8 rounded-lg bg-white/10 flex items-center justify-center flex-shrink-0\">\n                          <IconComponent className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <p className=\"text-white text-sm font-medium truncate\">\n                            {activity.title}\n                          </p>\n                          <p className=\"text-gray-400 text-xs\">{activity.timestamp}</p>\n                        </div>\n                        <div className={`w-2 h-2 rounded-full ${getStatusColor(activity.status).replace('text-', 'bg-')}`} />\n                      </motion.div>\n                    )\n                  })}\n                </div>\n                \n                <Link href=\"/history\">\n                  <button className=\"w-full mt-4 text-purple-400 hover:text-purple-300 text-sm font-medium transition-colors\">\n                    View All Activity →\n                  </button>\n                </Link>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}