// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  username  String?  @unique\n  name      String?\n  avatar    String?\n  password  String\n  role      Role     @default(USER)\n  plan      Plan     @default(FREE)\n  credits   Int      @default(100)\n  \n  // Timestamps\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  lastLogin DateTime?\n  \n  // Relations\n  textGenerations  TextGeneration[]\n  imageGenerations ImageGeneration[]\n  codeAnalyses     CodeAnalysis[]\n  documents        Document[]\n  apiKeys          ApiKey[]\n  usageStats       UsageStats[]\n  \n  @@map(\"users\")\n}\n\nmodel TextGeneration {\n  id            String   @id @default(cuid())\n  userId        String\n  prompt        String\n  generatedText String\n  model         String\n  tokensUsed    Int\n  type          String?  @default(\"generation\")\n  parameters    Json?\n  \n  createdAt DateTime @default(now())\n  \n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  @@map(\"text_generations\")\n}\n\nmodel ImageGeneration {\n  id            String   @id @default(cuid())\n  userId        String\n  prompt        String\n  revisedPrompt String?\n  imageUrl      String\n  model         String\n  parameters    Json?\n  \n  createdAt DateTime @default(now())\n  \n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  @@map(\"image_generations\")\n}\n\nmodel CodeAnalysis {\n  id           String   @id @default(cuid())\n  userId       String\n  code         String\n  language     String\n  analysisType String\n  analysis     String\n  tokensUsed   Int\n  \n  createdAt DateTime @default(now())\n  \n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  @@map(\"code_analyses\")\n}\n\nmodel Document {\n  id          String      @id @default(cuid())\n  userId      String\n  filename    String\n  originalName String\n  mimeType    String\n  size        Int\n  url         String\n  status      DocStatus   @default(PROCESSING)\n  extractedText String?\n  metadata    Json?\n  \n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  \n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  @@map(\"documents\")\n}\n\nmodel ApiKey {\n  id        String   @id @default(cuid())\n  userId    String\n  name      String\n  key       String   @unique\n  lastUsed  DateTime?\n  isActive  Boolean  @default(true)\n  \n  createdAt DateTime @default(now())\n  \n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  @@map(\"api_keys\")\n}\n\nmodel UsageStats {\n  id              String   @id @default(cuid())\n  userId          String\n  date            DateTime @default(now())\n  textGenerations Int      @default(0)\n  imageGenerations Int     @default(0)\n  codeAnalyses    Int      @default(0)\n  documentsProcessed Int   @default(0)\n  tokensUsed      Int      @default(0)\n  creditsUsed     Int      @default(0)\n  \n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  @@unique([userId, date])\n  @@map(\"usage_stats\")\n}\n\nmodel SystemStats {\n  id                String   @id @default(cuid())\n  date              DateTime @default(now())\n  totalUsers        Int      @default(0)\n  activeUsers       Int      @default(0)\n  totalGenerations  Int      @default(0)\n  totalTokensUsed   Int      @default(0)\n  totalCreditsUsed  Int      @default(0)\n  \n  @@unique([date])\n  @@map(\"system_stats\")\n}\n\nenum Role {\n  USER\n  ADMIN\n  MODERATOR\n}\n\nenum Plan {\n  FREE\n  PRO\n  ENTERPRISE\n}\n\nenum DocStatus {\n  PROCESSING\n  COMPLETED\n  FAILED\n}"